steps:
- name: 'gcr.io/k8s-skaffold/pack'
  entrypoint: 'pack'
  args: ['build', '--builder=gcr.io/buildpacks/builder', '--publish', 'us.gcr.io/$PROJECT_ID/$_REPO/$_IMAGE:$SHORT_SHA']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
  - '-c'
  - > 
    gcloud deploy releases create 'release-$SHORT_SHA'
    --delivery-pipeline=$_PIPELINE_ID
    --region=$_REGION
    --source=./
    --images=$_REPO=us.gcr.io/$PROJECT_ID/$_REPO/$_IMAGE:$SHORT_SHA
---
apiVersion: deploy.cloud.google.com/v1
kind: DeliveryPipeline
metadata:
  name: $_PIPELINE_ID
  description: $_PIPELINE_DESC
  serialPipeline:
  stages:
  - targetId: dev
    profiles: []
  - targetId: prod
    profiles: []
---
apiVersion: deploy.cloud.google.com/v1
kind: Target
metadata:
  name: dev
  description: development cluster
  gke: 
    cluster: projects/$PROJECT_ID/locations/$LOCATION/clusters/$_DEV_CLUSTER
---
apiVersion: deploy.cloud.google.com/v1
kind: Target
metadata:
  name: prod
  description: prod cluster
  gke: 
    cluster: projects/$PROJECT_ID/locations/$LOCATION/clusters/$_PROD_CLUSTER
---
substitutions:
  _GCR_HOSTNAME: us.gcr.io
  _REGION: us-central1
  _DEV_CLUSTER: cluster-dev-1
  _PROD_CLUSTER: cluster-prod
  _REPO: frontend-app
  _IMAGE: frontend-app-image
  _PIPELINE_ID: frontend-app-pipeline
  _PIPELINE_DESC: frontend app pipeline for cloud build generating a release that gets deployed to GKE cluster 
tags:
  - gcp-cloud-build-deploy-gke
  - frontend-app